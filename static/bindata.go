// Code generated by go-bindata.
// sources:
// ../config/README.md
// ../config/cli/fleet-eth.prod.json
// ../config/cli/fleet-eth.staging.json
// ../config/cli/fleet-eth.test.json
// ../config/cli/fleet-wakuv2.prod.json
// ../config/cli/fleet-wakuv2.test.json
// ../config/cli/les-enabled.json
// ../config/cli/mailserver-enabled.json
// ../config/status-chain-genesis.json
// keys/bootnode.key
// keys/firebaseauthkey
// keys/test-account1-status-chain.pk
// keys/test-account1.pk
// keys/test-account2-status-chain.pk
// keys/test-account2.pk
// keys/test-account3-before-eip55.pk
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _ConfigReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x51\x6f\xdb\x38\x12\x7e\xd7\xaf\x18\xa8\x0f\xd7\x00\xa9\xe4\xc4\x76\x92\xf5\xcb\x35\x4d\xd2\x6d\xee\xda\x34\x70\xd2\xeb\x43\x51\x44\xb4\x38\x96\xb8\xa1\x38\x5a\x92\xb2\xeb\x3d\xf4\xbf\x1f\x86\x92\x6c\x25\xce\x15\x58\xb4\x88\x6d\x72\xe6\xe3\xcc\xf7\x0d\x67\xf8\x0a\xae\x8d\xb7\x24\x9b\xdc\x2b\x32\x51\x74\x5f\x2a\x07\x92\xf2\xa6\x42\xe3\x41\xa2\xcb\xad\x5a\xa0\x03\x5f\x22\x88\x95\x50\x5a\x2c\x34\x02\xd5\x6c\xed\x40\x99\xb0\xf1\xaf\xbb\xcf\x37\x90\x93\x59\xaa\x02\x96\x64\x21\x73\x5e\xf8\xc6\xbd\x29\x28\x4b\x18\x12\xc1\x79\xdb\xe4\xbe\xb1\x08\xb4\xdc\x73\xe1\x13\x71\xa9\x0c\xca\x1e\xf0\x5b\x56\x0b\x2b\x2a\x97\xb6\x16\x49\x41\xd9\xf7\xd7\xe9\xf3\xb5\x03\x58\x2a\x8d\x87\xb0\x2e\x55\x5e\x82\xd0\x8e\x18\xd1\x0b\x65\x18\xd0\x0b\xa5\x51\x42\x4e\x15\xa7\xe2\x80\x0c\x54\x28\x8c\x32\x05\xc7\x80\x22\x2f\xbb\x34\x12\xe0\x08\xb3\x1b\x92\x78\x11\xa0\xb3\x2e\xdc\x2e\xaa\x36\xf9\x02\x0d\x5a\xa1\xbb\x98\x1b\x2b\xd8\x15\x1e\x71\xe3\x40\xf8\x60\xf1\xf0\x60\x89\xfc\xc3\xc3\x93\x14\x39\xc2\x24\x8a\xae\xdb\xa5\x96\xcf\x8e\x3c\x5a\x82\x30\x9b\x2d\x97\xc2\x22\x78\x22\x58\x89\xa2\x41\x58\x22\x6a\x58\x5a\xe4\x35\xf8\x46\x35\x1a\x10\x06\x94\x73\x0d\x7e\x7f\x5d\x7a\x5f\xbb\x59\x9a\x16\xca\x97\xcd\x22\xc9\xa9\x4a\x3b\xc6\xd5\xf6\x5b\x41\x69\xb0\x76\xa9\xc1\xf5\x41\x12\x45\x57\x3f\x44\x55\x6b\xdc\xea\xa4\x34\x3a\xc8\x85\x81\x05\xc2\x4a\xe1\x7a\xc8\x7e\x6b\x93\xe6\x5a\x31\xef\xbb\x5f\x07\xb0\x24\x2d\xd1\x26\x51\xf4\x0a\xae\xab\x9a\xac\x17\xc6\xc3\x1d\x86\xea\x71\xad\xd6\xcf\xa4\x75\xc8\xba\xf9\x00\xef\x09\x1c\xae\x02\x8f\xae\xf3\x69\xd9\xaf\xc8\x79\x50\x5b\x40\x62\xd6\x99\x10\xad\x1c\x7b\x2e\x50\xd3\x9a\x0f\x7d\xf5\x44\xa7\xf6\x3c\x66\xfd\x85\xb2\xea\x24\x4a\xa2\xe8\xdc\x00\x76\xc9\xd3\xf2\xf9\x51\x0e\xbd\x57\xa6\x70\xb0\xa6\x46\x73\x8c\xb9\x6e\x24\xce\xa2\x2c\xcb\xfe\x70\x64\xa2\xff\x46\x00\x00\xf1\x0d\xfa\x35\xd9\xc7\xeb\xcb\x78\x06\x47\x87\xed\xda\xa5\xf0\xe2\x52\xd9\x78\x06\x71\xea\xab\x7a\xc7\xfc\x1b\x29\xbc\x88\x3b\x2b\x8e\xf7\xdf\xb8\x61\xab\xa3\xe3\xf1\x9f\x6b\x7c\xf6\xb7\xb7\x9b\xa3\x91\xf8\xd7\x8a\x1a\x17\xcf\xc0\xdb\x06\xb7\xfe\x97\xca\xe5\xb4\x42\xcb\x18\x4b\xa1\x5d\xbf\x73\x2e\x57\x68\xbd\x72\x78\x2e\xa5\x6d\xf1\x93\xf1\x24\x99\x9e\x24\xa7\x67\x3d\xea\x47\x26\xd0\xf4\x06\xa3\x24\xfc\x9b\x8d\x47\xe3\xd1\xe0\xe0\x82\x8d\xec\x3d\xd5\x2a\xe7\xc3\xbf\xc5\xeb\x52\xb9\x1a\x6d\x25\x94\x8e\xbf\x47\x3f\x99\x8c\x40\x75\xf6\xe4\xc8\x8c\xe5\x35\x98\xa3\x73\xc2\x6e\xda\x9b\xbf\xcb\x22\x03\xd9\xc7\x0d\xb5\x25\x4f\x39\xe9\xf6\x26\x6c\xa8\xf9\x87\x84\x35\xb3\xef\x09\xd0\x84\x96\x12\x94\x9b\xdf\x5e\x00\x0b\xd3\x99\x18\x44\xb9\xa7\xc4\x87\xfb\xfb\xdb\xab\xe0\x23\x9f\x12\xc5\x1b\x1f\xc8\xf9\x41\xa2\xf1\x60\xeb\x96\x2c\x6f\x9d\x4d\x27\xd3\x9e\xbf\xdb\xeb\x4f\x24\x1b\x8d\x9c\x74\x8c\xbe\x3c\x34\xe8\x0f\xd7\xb8\x18\x1f\x0a\x59\x29\x13\x77\x99\x47\xd7\x06\xc8\x4a\xb4\x1c\xae\x90\x7f\x34\xce\x83\xa6\xa2\xe0\x56\xb2\x2d\x9f\x5f\x44\xfc\x91\x8a\xf7\x4a\x63\xa8\x93\x95\xb0\xa9\xa6\x62\x57\x2b\x89\xa6\x62\x2b\x16\x15\x1f\x71\x85\x9a\x2d\xaf\x6f\xde\x7f\x1e\xac\x7f\x12\x3f\xee\xd4\x5f\x8c\x71\x3c\x1a\x3d\x59\x7e\x27\xf2\xc7\xa6\xe6\x14\xa6\xbb\xf5\x0b\xaa\x6a\x8b\xce\xcd\xc9\xf3\xd5\xeb\x88\xea\xf2\xf9\x8f\xd0\x4a\x42\xd6\x9f\x96\xed\x92\x10\x16\x67\x90\x5d\xcd\xe7\x9f\xe7\xd9\x21\x64\x5f\xcf\xe7\x37\xfc\xc9\xb1\xf0\xe7\xe5\xd5\xbb\x2f\xbf\xf3\x97\xfb\xf9\xf9\xc5\x55\xd6\xde\xc7\xaf\xe2\xb1\xe9\xfb\x66\x2f\x6f\x2b\xee\x86\x1a\x0b\x86\x64\xe8\x61\x16\xb5\xd8\x00\x1b\xbf\xae\x48\xaa\xa5\x42\x09\x5f\xdb\x32\x3b\xd8\xd6\x07\x54\x5c\x4b\x05\xb6\x74\x6a\xbd\x2d\x92\xee\x5a\x82\x2f\x95\xdb\xe3\x77\x17\x41\x3c\x83\x76\x2d\xac\xbf\x54\x25\x83\x8d\x4f\x42\xe9\x3b\xb4\x2b\xb4\xfb\x16\xbf\xbe\xda\xe9\x5a\x3c\x36\xf1\xc0\x7c\x07\x75\x2b\x9c\x5b\x93\xe5\x43\xe3\xce\x89\x96\x4b\xad\x0c\xbe\x51\x66\x41\x3f\xe2\xe0\xf4\x73\x78\xa7\xf6\x9d\xc3\xc5\x6a\x1c\xca\x70\xa7\xdc\xa6\xaa\xd0\x5b\x95\x03\x9a\xdc\x6e\xc2\xb8\xe0\x46\x56\x2a\xe7\xc9\x6e\xc0\xe2\x9f\x0d\x3a\xef\x92\x28\x7a\xb7\xe1\x99\x25\x1a\xed\x41\x79\x58\x2b\xad\x19\x06\x32\xcd\x3a\xcb\x45\x06\x58\x2d\x50\x4a\x94\xc0\x69\x2c\x84\xc3\x04\xee\x29\xd8\xd4\xe4\x7c\x61\x91\x67\xba\xf3\x28\x64\x90\x91\xcb\x99\xe9\x8f\x84\x94\x81\x7b\xfe\x11\x64\x6d\x7b\xec\x2c\x7a\xae\xc5\x65\x87\xbb\xa7\x47\x7c\xfb\xfb\xdf\xd2\xe8\xcb\xfc\x9a\x39\xec\xc3\x9a\xa5\x69\xe3\xd0\xce\xea\x8e\xa2\xb7\x25\x39\x3f\xe3\x5e\xf1\xcf\x6e\x80\xc6\x9d\xef\xcf\x27\x0c\x47\x0f\x0f\x37\x9f\xef\xaf\x66\x0f\x0f\x61\xce\xf4\xec\xf4\x30\x2d\xcb\x8b\x0d\xdc\x05\xad\xe0\xbc\xae\x41\x18\x09\xdf\x38\x47\x6e\x7f\x2e\x08\xe3\x76\x33\x77\xa9\x11\xbd\x4b\x5a\x6d\x13\x55\xa5\x07\x2c\x56\xf6\x92\xd6\x59\x37\xb1\x2e\x74\xc3\xfd\x75\x30\xb4\x94\xeb\x07\x64\x25\x4c\xa8\xf7\x75\x29\x3c\xd4\x88\xd6\x85\xf3\x17\x44\xde\x79\x2b\xea\x70\x7f\x5c\xcb\xf9\xe0\x59\x15\x54\x12\x26\x0f\xe3\xdc\x60\xee\x19\x01\x0d\xab\xee\xbc\xb0\x5c\x0c\x43\x61\xe2\x27\x21\x6c\x15\x78\x91\xfd\xf8\x3d\x67\xd8\x75\xc4\xa4\xb6\x24\xfb\x36\xf4\x8e\xc8\xf3\x34\x0b\x33\xa2\x97\x15\x39\xc0\x59\x9a\x8e\x27\x53\xb4\xbe\xfd\xfb\xf6\x78\x9c\x4c\xa6\xc9\xc9\x69\x72\xf6\xdb\x6c\x3c\x9a\x8c\x26\xad\x38\xdf\x3b\xa0\x7b\xcb\xd1\xc8\x5d\xe1\xbf\x88\x38\x1c\x92\x6f\x7f\x3b\x4b\x4e\x4f\x92\xe9\x24\x19\x1f\xcf\xc6\xa3\xe9\x73\x44\x96\x4f\xe5\xff\x37\xb8\xe1\xc8\x7d\x3b\x98\x92\x61\x10\x4e\x9f\x42\xed\x26\xd8\x1e\x5c\xaa\xea\x49\x7a\x76\x9a\x9c\x4c\x93\xc9\x38\x39\x3e\x4a\x7d\x5e\xa7\xe3\xd1\xe9\x68\x9c\xa2\x2f\x57\x93\xf4\xe8\xe4\x8b\x6a\x8e\x3f\x9c\x57\xe3\xa3\xe3\x17\xff\x77\x47\x45\xbb\x02\xcd\xb6\xac\x66\x50\xa2\xae\xc3\x33\xe6\x45\xa5\x97\xca\xc8\xb6\x44\xc2\x9b\x69\x13\x1e\x48\x15\x59\x1c\xbc\x66\x3c\x41\x29\x56\xdc\x27\x85\x81\x6c\xc0\x4a\x06\x3c\x9d\xf7\x89\xcf\xb6\xcf\x67\x8b\x10\x26\x9b\x0b\x4e\x42\xeb\x0d\x88\xd0\x2a\xda\xaa\x24\xd3\x56\x56\x12\x45\xd9\x33\x8a\xb2\xe0\x2c\x0c\x08\xed\xd1\x1a\xe1\xd5\x0a\x77\x2d\x9d\x5b\x98\x24\x9e\x95\x9c\x99\x13\x15\x06\xc4\xc1\xeb\x40\x38\x18\xb2\x20\x29\x89\xfe\x17\x00\x00\xff\xff\x35\x23\xbb\xe7\x97\x0c\x00\x00")

func ConfigReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_ConfigReadmeMd,
		"../config/README.md",
	)
}

func ConfigReadmeMd() (*asset, error) {
	bytes, err := ConfigReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/README.md", size: 3223, mode: os.FileMode(420), modTime: time.Unix(1629813969, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigCliFleetEthProdJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x98\x4f\x73\x54\x57\x92\xc5\xf7\xfe\x14\x0a\xad\x27\x8a\xfc\x7f\x6f\xb2\x62\x6c\x84\x15\xd8\x10\x02\x1b\x01\x3d\x31\x8b\xbc\x99\xf7\x82\xba\x69\x09\x90\x90\x0d\x13\xfd\xdd\x27\x1e\xa6\xc3\xc2\x4d\xad\xb5\xaa\x88\x57\x2f\x2a\x4f\x65\x9e\xf3\xbb\x2f\xdf\xff\x7d\x77\x70\x70\xf8\x74\x9e\xd7\xfc\x74\x7d\xf1\xe1\xf2\xf0\xee\xc1\x8a\x37\x97\xf3\xbf\xb6\xcb\x8f\x2f\xee\x9f\x5d\xe6\xc5\xf5\x7c\xff\xf1\xab\xeb\x3f\xbc\xf9\x70\x79\x35\xdf\xff\x70\x71\xbe\xce\x5e\x1d\xde\x3d\xd8\x7e\xe3\xe0\xe0\xf0\xe8\x3c\xc6\x9b\x59\x87\x77\x0f\xae\xde\x7f\xf8\x7c\xe7\xc1\xc1\xe1\x83\x37\x73\x5e\x1d\xde\x3d\x38\x9c\x57\xaf\x77\x6f\xdf\x5f\xd4\xe1\x97\x2f\xbe\xbf\xb8\xb8\x7a\x7c\x51\x73\x2b\xf9\x3f\x9f\x2f\x1d\x1c\x1c\xce\xf3\x8b\x9a\x77\xef\xdc\xb1\x69\xaa\xb2\x06\x03\xcb\x20\x44\xf6\xbe\xb2\x60\x01\x74\xca\x31\x6c\x14\xb2\xa1\x4f\x8c\x36\x9b\x8d\x30\x9b\xd8\xc1\x23\x02\x52\x17\x46\x2a\xa7\xc7\x6c\x9e\x8b\x56\x49\xb4\x11\x39\x10\x0a\x09\x10\xba\xfb\xe0\x06\xd9\x74\xcd\x42\x1f\xee\x58\x9e\x90\x55\x40\xdd\x31\x46\xd4\x3d\x69\xbb\xa6\x3b\xf7\x1d\x9a\xdf\x15\xe1\x2f\xaa\x6f\x48\x14\xb6\x4c\x5b\xd6\xc4\xa9\xaf\x4a\x0f\x5f\xcd\x1d\x16\xb9\x08\x00\x0d\xeb\x5a\x98\xdc\x16\x90\x26\x8e\x29\xa4\xd8\x75\xe8\xc0\x05\x0e\xb0\x66\x2c\xcc\x4c\x0a\x43\x06\xb2\xbe\xdc\x61\xbb\x2d\x5a\x91\xd2\xe2\xc6\x40\xd9\x99\x35\x28\x31\x8c\x1a\xdb\x74\x62\x32\xc7\x4c\x8e\x7b\xd8\xfa\x0e\xa9\xef\x90\x3f\x7f\x7e\x5b\x25\xd3\x5a\x56\xbd\x37\x83\x01\x2e\x2d\xb8\xe6\x54\xc9\xb9\x96\x54\xaf\xb6\x60\x48\x02\x71\x5a\x45\xb1\xa8\x75\x43\x5d\x19\xb3\xfb\x24\xcb\xa4\xa6\xbc\xa8\x2f\x24\xe9\x1a\x82\x68\xe9\xad\x8d\xe9\xdc\xa2\x91\x99\x22\x9a\xba\x91\x69\x04\x34\xb6\xa1\x5c\x62\x83\x9a\x88\x91\x5b\xdc\x63\xd9\x35\xd8\x7a\x49\xb0\x47\x22\x71\x41\x13\x18\x88\x8e\xce\xda\x8d\xb4\x9a\x97\x64\x64\x2b\x85\x60\xa9\xe6\xd3\xd3\x7c\xa2\x75\xc6\xd4\x6c\xa0\x8d\x9b\xb6\xc0\xa5\xd5\xaa\x77\x51\x84\x91\xea\x5a\x6d\x4e\xa9\xe0\x44\x85\x1e\xb5\x7a\x1b\x23\x7d\x3a\x19\x54\x07\x99\x0b\x78\xf5\xc4\xc9\x6d\xd1\x1a\xb4\xd2\x7c\x9b\xb5\xd2\x0e\xc1\x76\x08\xed\xdb\x1a\x95\x5d\x23\x46\xeb\xcc\x0b\x67\x0e\x6b\x38\xd4\xc7\x02\x25\xcc\x45\x40\x24\x6b\x76\x34\x5a\xc9\x45\xd6\xb4\xa6\x6c\x42\xd4\xd8\xa2\xe9\x4c\xa6\x42\xde\x86\x9c\xd8\xa5\x56\x2f\xac\x5a\xd1\x81\x5d\xd8\xc1\x7a\xa7\x0a\xa3\x90\x5a\x42\x25\x2b\x73\x59\x61\xeb\xd0\x51\x2d\x7a\xfb\x73\xd8\x02\x3b\xec\x7b\x3a\xa9\x02\x9a\x0a\x5e\xcb\x3a\xa7\x1b\xcd\x96\x2e\x0d\x06\x29\x8e\x61\xcd\xab\xcc\x5b\x5f\x9d\x4a\x87\x98\x2f\x5c\x96\x26\x85\x58\x0a\x6b\x94\x56\xf9\x6a\x1d\x30\x2d\x4a\x71\xf1\x20\x08\x5d\x96\x6d\xad\x49\xd2\x33\x3d\x06\x11\xaf\x3e\x72\xc4\xe6\x5f\x19\x03\x13\xe6\x22\xd7\x55\x70\x8f\x75\x47\xc4\x3b\x42\xdd\xa1\xda\x67\x91\x9f\x35\xfe\xef\x97\xcc\xff\xfa\x7e\x03\x47\x3d\x8a\xb3\x37\xbf\xcc\xf7\xd7\xf3\xfd\xb7\xc3\x0f\x16\x13\x24\x1a\x4e\xad\xd1\xad\x47\x23\xca\xd6\x82\x30\x3b\x89\xc4\xe4\xbe\x70\x94\x6d\x1d\xef\x2d\xd3\x72\xcd\xde\x83\xc1\x78\x05\x26\x89\x9a\x13\x31\x2d\x93\x25\x3a\x4a\x05\xfa\x9a\xa5\xc8\x3c\x63\xf4\x59\xad\x83\x38\x33\x0d\x90\xe5\x89\x08\x33\xb2\xad\x86\x89\x43\xc8\xbf\x84\x9f\xa4\xed\x08\xe5\xdb\xad\x4e\xa1\xc5\xd6\x83\x78\x85\xf7\x2d\x52\xb6\x8a\xa4\x11\x41\x53\x07\x23\x26\x26\xf1\xb9\x4c\x5b\x91\x15\x6b\x8b\xd6\x9a\x08\xc7\x4c\x90\x1a\x38\xc8\x83\x83\x68\x2e\x9e\x2d\x55\xfa\xc4\x2e\xce\x55\xb1\x14\x83\x71\x40\xcc\x32\x68\xbe\xfd\xd1\x31\x35\x66\xe7\xbe\x72\xc5\xe2\x10\xbf\x61\x08\xda\xe9\x1e\x91\x73\xd2\x50\x1e\x10\x39\xdd\x9c\xd0\x5a\x08\x82\xa2\x8c\x0c\x06\x12\x73\xad\xb1\x60\x62\x58\x9f\x58\x6b\x79\x43\xdb\x7c\x08\x73\x0d\x74\x5d\x20\x21\xc3\x67\x6f\xbc\x86\x8f\x26\x91\x5d\x6a\x76\x40\x04\x4b\x31\x1d\x7d\xd2\xb0\x94\x05\xe5\x3c\x7a\x13\x2f\xd4\xd6\xc7\xca\x58\xc0\xf3\x1e\x82\xec\xd0\xdb\x8e\x36\x44\xc9\x1e\x95\x94\xbd\x26\xe7\x18\xb4\xd1\x89\x21\xc7\xd0\xc1\x13\x80\x47\x36\xa2\x81\x64\x4b\x63\xae\x4e\x93\x40\x29\x62\x0b\x31\x65\xb8\x4c\xc8\x16\x45\xe8\x53\x99\x47\xf4\xbe\x81\xa1\xeb\x1c\xd5\x81\x6a\x12\x98\x39\x93\x2a\xb3\x0e\x04\x60\x68\x26\x1a\x43\xb1\xc1\xec\xdd\x08\x8a\xa2\xe3\x36\x6e\x12\xd9\x11\xe1\x6e\xdf\xb8\x5b\x84\x49\xdf\x1c\xa7\xea\x0a\x83\x26\x17\x8f\x45\x04\x29\x6e\x13\x32\xa6\x44\xad\xaa\x6d\x9a\x38\x0d\x8c\xa6\x0d\x6c\x2d\x66\x3a\x8f\xb4\xac\x5c\x48\xdb\xe1\x25\x50\x68\xba\x09\x9b\x63\x55\xa9\x69\x23\xaf\x10\x01\xb6\x5e\x2d\xa5\xa2\xd5\x28\x29\x00\x19\x18\x09\x34\x56\xff\x6a\xdc\x64\x7b\x58\x0f\x84\x98\xa3\x3a\x26\xe9\x82\x36\x80\x03\xd0\xad\xd4\xa6\xe5\x14\x83\x2d\xae\x5c\xa3\x35\x5e\x6b\xcb\x6d\x10\x29\xab\xb4\x15\xab\x2c\xc1\x66\x4c\x8b\x62\x65\x9e\x34\x82\xbd\xd4\xd5\x24\xd7\xa8\x31\x74\x52\xce\x96\xc8\x2d\x74\x8e\xd1\x75\xba\x57\xae\x6c\xd1\x74\xb9\x2f\xd5\x7b\x5b\xf4\xd9\x76\xda\x77\x4e\x7b\x1c\xd9\x75\x61\x09\x81\x2f\x5a\xee\x15\x1d\x30\x16\xf6\x1a\xbd\xa1\x4d\xed\x12\xd4\xa3\x60\x54\x4a\x5b\xa3\xb2\xfa\x22\x8b\xd5\xa4\x46\x79\x5b\x49\xcd\x51\xc4\x3a\xa8\xf2\xcc\x96\xe5\xe0\x14\x6b\x5a\xe7\xaa\x19\x38\x61\xf9\x4a\x6d\x38\x47\x0e\x19\x58\x5d\x5b\x6e\x7d\xe8\xbd\x2b\xd7\xbf\x67\x8d\xe4\xbb\xbe\x47\x63\x0f\x93\xc1\xc9\xe2\x41\x13\xe6\x92\x60\x9a\x21\x6e\xe0\x73\x8b\x22\xb3\xc9\x98\x88\x08\xa4\x9c\x04\x51\x89\x2d\x38\xe7\x18\xc9\x1e\x9f\xed\x58\x3c\x91\x07\xea\xd6\xe4\x39\xb5\xfa\xa6\x2b\xfa\x08\xca\x02\x32\x40\x99\xd6\x86\x60\x48\x8c\x56\xb8\x91\xd7\x5a\x06\x35\xa1\xf6\xd5\xac\x7d\x8f\x21\x45\xd0\x60\x12\xcd\x3e\x84\x46\x31\x05\x58\xa2\x32\xa1\xe9\x0a\x9f\xe0\x36\xe7\x98\x55\x6d\x85\x95\x4d\x5d\x7d\x8c\xb9\x40\x04\x46\x4a\x88\x3a\xae\xc9\xa6\x38\xa6\x75\x74\x8e\x36\x13\xc8\x81\x30\x6b\x88\x6f\x44\xc5\x6a\xcb\x17\xd6\x76\xf0\x0e\x77\x22\x9b\xb6\xd8\xa3\x85\x96\xfc\x81\x7a\xfd\x1c\x1a\x12\xfd\x4f\xd4\x9f\x7c\xb8\x7c\xfd\xf8\xe2\xea\x6c\x9d\x65\x5c\x9d\x5d\x9c\x5f\x7e\x03\xf8\x20\xb7\x8d\xfa\x3f\x1b\x0b\x72\xdb\x48\xbf\xa9\xe5\xb6\xc9\x7d\x53\xcb\x6d\xf3\xf9\xa6\x96\xdb\xe6\xf0\x4d\x2d\xb7\x8d\xdb\xaf\xfc\x72\xcb\x5c\xbd\xa9\xe5\xb6\xf9\x79\x53\xcb\x6d\x63\xf2\x6b\x26\xfe\x72\x15\x57\x67\xb9\x77\xe9\x8d\x64\x97\x3e\x28\xa1\x75\x8b\xcd\x7e\xd8\x46\x87\x5c\xdd\x3c\x97\xfa\x40\x07\x9f\xc1\x91\x59\xa2\x2e\x12\x31\x59\xc7\xea\x26\x99\x60\x8e\x64\x15\x7d\x74\xaa\x35\x97\x54\x2d\xe2\x85\x65\x65\x43\x64\xa0\x9a\xa6\xe4\xea\x98\x7d\x78\x07\xda\xbc\x98\x16\x33\x30\xba\x17\xe7\xa4\x2f\xcf\xbd\x7d\x3b\x7d\xf6\x3c\xf5\x4e\x55\x0f\x6e\xe1\xc9\x22\xd5\x10\x7c\x94\x38\xb4\x2d\xcf\x65\x0e\x00\x9d\x3b\x6e\xbb\x83\x69\x4f\x61\x50\x9b\xc9\x16\x09\xc2\xcc\x7d\x94\xd3\xb6\x9d\x1b\x08\x4f\x13\x1d\x26\xbe\x61\xce\x16\x35\x02\x2a\x6b\xde\xd4\xc2\xb3\xe5\x32\x5a\x35\x57\x00\x0e\x9a\x16\xdb\x5a\xd3\xe7\x3d\x64\xd9\x11\xf8\x0e\xd9\x76\x48\xbc\x47\x25\xb4\x08\xa8\x39\x83\x47\x03\xb5\xd4\x12\x8d\xae\x23\x43\x68\x41\xf5\xe2\x81\xb2\x41\x76\xb8\xb6\x66\x08\x8b\xbb\x4d\x08\x69\x22\x01\xb3\x0d\xea\xa2\x31\x99\xfa\x5c\x29\x11\x32\xa8\x43\xd3\x58\x9d\xfb\xb6\xf6\xe9\x60\xef\x3a\xd6\xc6\x99\x99\x00\x0e\x83\x47\x33\xf3\x18\x89\x8b\xff\x38\x1b\x6d\xe7\xb4\x43\xfd\xc6\xd1\xf8\xe7\xdb\x96\xff\xb0\xc2\x9d\xb3\xb7\x72\xe7\xe6\xbb\x87\x3b\x57\xf9\xf6\x0e\x43\x03\xbe\x33\xaf\x5e\x5f\xcb\x1d\xb4\x67\x67\x1f\xe8\xf8\xbf\xff\x79\xda\x8f\xdf\xf9\xe4\x4f\xff\xf4\x5f\x1f\x9d\x9e\xc8\xa7\xf7\xa7\xc7\x17\xfc\xfd\xdf\xdf\x3d\xd7\xfb\x36\xee\x9f\x9e\xda\xe9\x93\xf3\xab\x27\x65\xbd\x4d\xf9\xb3\x47\x9f\x0b\xfc\xe5\xcd\xc1\xfe\x1a\x4f\x8f\x4f\x3e\x3d\xe0\xf7\x4f\x5e\xa9\x9e\xbc\x7a\x79\x92\x4f\xfe\xf1\xf1\xfa\xe4\xf4\xd8\xcf\xe9\xf5\xf3\xcb\x97\x27\xaf\x9f\x3d\xfc\xfe\x6f\xf6\x8f\xd3\xbf\x3f\x7c\x55\xa7\x7f\xa9\x71\x73\xef\xdf\x5f\xc0\xfe\x76\x79\xf4\xf4\xe7\xdf\xe9\xfb\xdf\x4e\xef\xd3\xb3\x47\xfe\xcb\xe9\xc9\xf9\xf9\xa3\x67\xf6\xf8\xfb\x8f\xf9\x63\x7f\x71\x72\xf5\xa1\xbf\xfb\xe9\xe3\xa5\xc6\x6f\x97\xcf\xfe\x52\xe0\xab\xad\x7d\x7f\x85\xa3\xe3\xb3\xb7\x57\x67\xf7\xef\x97\xbf\x7a\xf7\xf8\x65\xbf\x78\xf2\xee\xa2\xbf\x3e\x7e\xf6\xfc\xd1\xf1\xc3\x4f\xeb\xb7\x2b\x8d\x9f\x9f\xd6\x7d\x7b\x4e\x9f\xf2\xc5\xd3\x7d\x6d\xfa\x63\xe7\xde\x5f\xe3\xe7\x77\xbf\xbe\xf8\xf0\x52\x7e\x19\xf6\x23\xf5\xe3\xc7\x17\x17\xf1\xe0\xd9\x8b\x67\x3f\x7d\x7a\xfb\xe9\xa7\x17\x3f\xe4\xab\x8f\x0f\x7f\x7f\x15\x47\x47\x74\xa6\xd7\xe7\xeb\xaf\x6d\xfa\x6a\x63\xde\x5f\xe2\xc9\xd1\xb3\x07\x47\xf4\x32\x1e\x5e\xbc\x8e\xeb\xe7\x57\xc7\xbf\x9f\xfc\x7a\xf4\xe0\x9a\x2f\x8f\x7e\x7c\x78\x75\xff\xdd\xf5\xd5\x8f\x47\xd7\xad\xdf\x7f\x70\x71\xf4\xfc\xc9\x83\x2f\x6e\xfb\xee\xe0\xe0\x5f\xdf\xfd\xeb\xbb\xff\x0f\x00\x00\xff\xff\xf4\x43\x46\x60\xe1\x13\x00\x00")

func ConfigCliFleetEthProdJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliFleetEthProdJson,
		"../config/cli/fleet-eth.prod.json",
	)
}

func ConfigCliFleetEthProdJson() (*asset, error) {
	bytes, err := ConfigCliFleetEthProdJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/fleet-eth.prod.json", size: 5089, mode: os.FileMode(420), modTime: time.Unix(1629814233, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigCliFleetEthStagingJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\x41\x8f\x94\xc9\x0d\xbd\xf3\x2b\x5a\x7d\x8e\xbe\xb1\xab\x5c\xb6\x6b\x4e\x04\x16\x18\x6d\x02\x22\xc3\x42\x56\x44\x39\xb8\x5c\xf6\x4c\x67\xc8\x34\xdb\xdd\xc3\xc2\x46\xfb\xdf\xa3\x86\x91\x60\x97\xe1\xcc\xed\x93\x3f\xc9\xef\xe9\xf9\x3d\xbb\xfe\x77\x6f\xb5\x5a\x9f\xc7\xf5\x8c\xdf\xde\x6d\x6f\xf6\xeb\xd3\xd5\x61\x77\x13\x7f\x39\x56\x9f\x6d\x7f\xd8\xec\x7d\xfb\x2e\x76\x1f\xd6\xa7\xab\xb4\x37\xfb\x4f\xf5\x87\x6f\x6e\xf6\x87\xd8\x3d\xdc\x5e\xe7\xe6\x62\x7d\xba\x3a\xb6\x58\xad\xd6\x8f\xae\x6d\xbc\x89\xf9\x45\x87\xd5\x6a\xfd\xf8\x4d\xc4\x61\x7d\xba\x5a\xc7\xe1\x72\xd9\x1f\xec\x62\x73\x7d\xb1\xbe\xfd\xf7\x60\xbb\x3d\x3c\xdb\xce\x38\x82\xfe\xeb\x63\x69\xb5\x5a\xc7\xf5\x76\xc6\xe9\xc9\x09\x57\x18\x50\xa9\xb8\x51\xf4\xd6\x4a\x36\x10\xa4\xc1\xae\x51\x74\x72\x6f\x6d\x38\xe4\x44\x0a\xe9\x0d\xb2\xd7\xe1\x75\x94\xa1\xee\xea\x98\x75\xf0\x44\xa8\x33\x99\xb3\xa1\x61\x9d\x22\x75\xb4\x39\x20\xb1\x02\x33\xe6\x68\x2e\x43\xd3\x0a\x3a\xa9\x76\x70\x26\x97\x3e\x08\xad\xb1\x51\x87\xfb\x24\x4b\xc7\xa5\x94\xbe\x10\x9d\x12\xd5\x5b\xd6\x5f\x50\x4c\xe9\x39\x6a\xc7\x9e\x52\xdc\x1a\x83\x4d\xa0\x4a\xd3\xbd\xaa\xd8\xc8\x20\x0c\x60\xe6\x02\x18\x63\xda\x34\x8d\x19\x40\x5c\xa8\xd1\x91\x52\x0c\x68\x3e\x0d\x5b\x16\x95\x59\x9c\xc6\xd4\x36\x4d\x31\x21\x46\x69\x13\x8c\x94\xc7\x18\xae\x33\xa9\xc8\xe8\x82\xe6\x0d\x5b\xad\x63\x02\x64\xdc\x47\xa1\x05\xab\x2e\x08\xb2\x94\xda\xef\x66\x89\x60\xa2\x8e\xd2\x4b\x37\x01\xec\x91\x64\x56\x0a\xf5\x29\x15\x4a\x0a\x5b\xa8\x01\x27\xc1\x28\xd3\x55\x87\x8c\x8a\x31\x32\xc9\xb8\xd4\x1c\x83\x68\x1c\x3f\xc5\x7c\x58\xe9\xec\xe8\x31\xab\x48\x9b\x1d\x73\x04\x2a\x71\x75\x6c\xd0\xc5\xd8\x2a\xe7\x1c\xc5\x15\x28\xb3\xa6\xb7\x51\xdb\xfd\xda\x96\x52\x75\xe9\x47\x8e\x9f\x94\xfc\x48\xf1\xdf\xb7\x2e\xf8\x69\x77\x74\xd3\x7c\x6a\x9b\x37\x2f\x62\xf7\x2e\x76\x77\xda\x61\x08\x69\xeb\x28\xec\x5d\x1a\xce\x8a\x64\x11\x99\x5e\x38\xbc\xa7\x32\x1b\x61\x91\x56\x42\xe6\x0c\xef\x38\xb0\x03\xaa\xa1\x86\xb8\x9b\x4e\xae\xe2\x19\xc5\x63\xfa\xe8\x52\x52\x63\x30\x4d\x45\xce\x31\xdb\xa0\xd0\xee\x12\xea\x92\x53\x66\xaa\x61\x2d\x3d\x8d\xea\x1c\x0a\x03\x46\xc6\xd1\x0e\xad\x2c\x1d\x16\x6c\x7c\xb7\xd0\x7c\xf4\xc1\x30\x93\x44\x29\x65\x22\xa2\xa9\x77\x67\xf5\xda\xad\x22\x55\x88\x3e\x1b\x0b\xf7\x96\x8c\xa0\x59\xd1\x7d\xb0\x4f\x4d\xb0\x99\x49\xbd\x63\x48\x4e\x37\x4d\x13\x81\x90\x36\x5c\xad\x1d\xfb\xc8\x2c\xc4\x1d\x7c\xb8\x42\x00\x28\x4a\x4b\x02\xc7\x26\x93\x93\x45\x75\x92\xde\x2f\xc0\x0b\x6a\x5f\x0a\xc1\x82\xdf\x20\x19\x94\x8e\xe0\x98\xdc\x5c\x2d\xa6\x56\xf3\xc2\xc3\x71\xe4\x28\x68\xd4\xdc\xd1\xb4\x35\xb0\xa6\x20\xe2\x3a\xcb\x8c\x62\x10\xe0\x13\x35\x08\x72\x12\xa4\x04\xa7\x4c\x28\xd3\xd9\x27\x70\xd7\x32\x00\xc9\x43\x75\x72\x10\xab\x94\x96\x47\xb5\xb1\x6a\xf4\xa6\x47\x7e\x00\x50\x4c\xf2\x93\x1b\xfa\x82\xbd\x2e\x84\x5f\xbb\xe1\xf9\xcd\xfe\xf2\xd9\xf6\xb0\xc9\x8d\xdb\x61\xb3\xbd\xde\xdf\xe1\x09\xa0\xef\xed\x86\xcf\xba\x02\x7d\xef\xb1\x7f\xc9\xe5\x7b\x4f\xf7\x8f\xb3\x7c\x71\xb0\xc3\xc6\xbf\xb9\xe1\x41\xd5\xb3\x59\xaf\xde\x84\xd3\xa2\x95\xe4\x04\x69\x28\x4a\x7c\xdc\xcd\xd9\x75\x98\xa7\x94\x6c\x3d\x54\x23\x07\xf2\xcc\x61\x6d\x54\x48\x05\xa3\x39\x44\x53\xa3\xfa\xa8\x53\x25\x4b\x72\x2b\x28\xc4\xc7\x15\xa7\xc2\x4a\xdc\x22\x8b\x76\x76\xb6\x2c\x94\x53\xc4\xa8\xb4\xe8\x6d\xf0\x9c\xb7\x91\x2e\x85\x17\xac\x72\x77\x5c\x3a\x92\xc3\x11\xae\xc8\xb0\x51\xc1\x71\xe6\xac\x38\x6d\x0a\xb7\x62\xc4\x39\xad\x57\x81\x46\xc5\x22\x70\x00\x17\xea\x3a\xb0\x52\x8b\x80\x8e\x95\x91\x86\x8e\x1e\x35\x94\xb8\x94\x50\x32\x29\x50\xbd\x69\x53\x0b\x9c\x5d\xb1\x27\x57\x0b\x0f\xac\x11\xcc\x1a\x94\xcc\xac\xc0\xb5\x6b\xbf\x8f\x2c\x4b\x3f\xc6\x65\x41\xd2\xbb\x39\xce\xaa\xa2\x44\xc8\xad\x24\x20\xd4\xc2\xaa\x3d\x8b\x56\x86\xe0\x9e\x65\x42\x9f\xc0\x8d\x8e\x47\x92\xd2\xa6\x41\xa0\x8c\x2a\xe4\xd1\x2a\xf6\x19\x4c\x45\xba\x0d\xab\x4e\x64\x6d\xa4\x82\xcc\xde\x59\x9c\xa7\x40\x1b\x75\x90\xf3\x80\x9a\x26\x20\x5c\x0b\x41\x94\x08\xb6\x04\xb4\x56\x7b\x1c\x23\x8d\xbd\x2c\xb0\x28\x7f\x1d\xe8\xcf\x4f\x8b\xaf\x8c\x70\xb2\x79\x4b\x27\x5f\x9e\xd9\x93\x83\xbf\x3d\xa9\x20\x50\x4f\xe2\x70\xf9\x8e\x4e\x90\x5f\x6e\x6e\xca\xd9\x5f\xff\x7b\x7e\x7d\x28\x8f\x3e\x6c\xaf\xae\x2f\xab\xdd\xbc\xbf\xa4\xfc\xf1\xd7\xab\xf3\x8b\x5f\xae\xce\xf0\xe2\x97\xdd\x3f\x9f\xc4\x5e\x9f\x5f\xe1\x55\x7d\xfa\x8a\xde\xdf\x7c\x56\xe8\x23\xc0\x9f\x8e\xe4\xb7\x31\xf4\xe5\xeb\x9f\x5f\x9e\x3d\x7a\xfe\x7a\xf7\xf6\xc7\xe1\xff\xa8\x1f\x5e\x3d\x3e\xe3\x97\x87\xbf\xed\x7e\xdd\x3f\xe1\xff\x9c\x91\x6d\xa4\x3c\xdf\x8f\xbf\xe7\xab\xc7\xe3\x4f\x18\x7f\x38\x71\xdf\x46\xe0\x27\x7d\xff\xc3\xd3\xab\xdd\x03\xfa\xd9\xda\xa3\xb3\xfa\xfa\x7d\x99\x1f\xf6\x0f\xdf\x3f\xbe\x78\xf0\xd3\x8b\xf3\xdf\x2e\x2e\x37\x5e\x5f\xf7\xc3\xf9\xe3\xf3\x67\x8f\x6e\x55\xbc\xb7\x5a\xfd\x7e\xef\xf7\x7b\xff\x0f\x00\x00\xff\xff\x1b\x41\xda\xac\xa6\x09\x00\x00")

func ConfigCliFleetEthStagingJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliFleetEthStagingJson,
		"../config/cli/fleet-eth.staging.json",
	)
}

func ConfigCliFleetEthStagingJson() (*asset, error) {
	bytes, err := ConfigCliFleetEthStagingJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/fleet-eth.staging.json", size: 2470, mode: os.FileMode(420), modTime: time.Unix(1629814234, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigCliFleetEthTestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x96\x5d\x6f\xd4\x49\xce\xc5\xef\xf9\x14\xad\xbe\x7e\xd4\xa9\xb2\x5d\x7e\xc9\x15\x90\x0c\xa0\x11\x83\x66\x20\xc9\xb3\x3b\xab\xbd\xa8\xb2\x5d\xd0\xb3\x21\x3d\x49\xfe\xc9\x0a\x56\xf3\xdd\x57\x1d\x58\xf1\x16\xae\xb9\x75\xb7\xea\x1c\xf9\xfc\x6c\xff\xff\xf3\x60\xb5\x5a\x3f\xdf\xbd\x7e\x9e\xb7\x79\xbe\x3e\x5c\xad\x8f\x7f\x7a\x7c\xfa\x74\xfd\x7f\xfb\xf2\xcb\xbc\x88\x7c\x7f\xbb\xbb\xb9\x5e\x1f\xae\x96\xab\x9b\xbc\xab\xbe\xd8\x1d\x6f\xaf\x7d\x77\x9b\x57\xef\xd6\x87\xab\xd9\xcf\xaf\x3f\xd4\x8f\xce\x6f\xae\x97\xbc\x3a\xda\x5d\xcc\xed\xeb\xf5\xe1\x6a\xff\xf2\x6a\xb5\xfe\xe9\xa2\x8f\xf3\x8c\xcf\x5e\x58\xad\xd6\x4f\xce\x33\x97\xbd\x5a\x2e\x6f\x36\x4b\x5e\x2f\xeb\x8f\x3f\x3c\xde\xed\x96\x17\xbb\xc8\xbd\xe2\x3f\xee\x4a\xab\xd5\x3a\x2f\x76\x91\x87\x07\x07\xd1\x7b\x42\x0a\x28\x94\x54\x4e\x23\x98\x1d\xba\xf6\x2e\xc1\x69\xd6\x28\xa8\x10\x76\x69\x48\x8a\xa1\x23\x10\x35\x2b\x8f\x54\xf0\x69\x0c\x68\x10\xcd\x4b\xd6\x9e\x4d\x1c\x43\x0c\x1d\x03\x23\x22\x74\x46\x53\x44\x03\x86\x24\x40\x0a\x37\xe6\x69\x0d\x3d\x04\x47\xc3\x36\xdb\xec\x0f\x49\x36\x0d\x36\x55\x75\x53\xc9\x0e\x89\xf0\xa3\xed\xcf\x3c\x5a\x16\x53\x6d\xd2\x72\x88\x54\x71\x68\x91\x5d\x60\x46\xad\x2e\x03\x45\x58\xc2\x8b\x79\xed\xc2\xca\x53\x1c\xd2\x9b\x48\x60\xd1\x00\xda\xff\xc1\x73\xb0\xb4\x48\xc2\x2a\x24\xd4\x6b\x57\x29\x49\xa2\x0a\x82\x60\x2c\x93\x66\x17\x6d\xa3\xc0\xe8\xd6\x82\xd9\x06\xd6\x20\xa6\x48\x2f\x0f\xa1\xf0\xa6\xaa\x6d\x80\x70\x53\x99\xee\x77\xe9\x35\x5b\xa9\xaa\x2a\xae\x8c\xc1\xb4\x57\x1b\x6c\x63\x72\x95\xc6\xb5\xa8\x28\x34\xc2\x92\x44\xa5\x0a\xe2\x6c\xa3\x8b\xb8\x94\x18\x95\x00\x39\x26\x6a\x9d\x39\x47\xc9\x91\xb5\x3b\x01\x18\x0d\x4b\xe0\x3a\x46\x02\x62\x8c\x18\x8a\x89\xe0\x4d\xd9\x99\x7b\x02\xbb\x46\x4a\xf1\x41\xfe\x10\xdb\x87\x36\xb2\x6e\x2a\xca\x9d\xc9\x3b\x8f\xff\xfc\xc8\xc1\xc9\xd5\x1e\xa6\xf8\xa5\x6f\xcf\x5f\xe5\xd5\x6d\x5e\xdd\x0b\x04\x57\x8b\x31\x5a\x44\xaf\x90\xda\xc6\x2c\x39\x5a\x0c\x2a\x73\x60\x24\x43\xe3\x62\x85\x10\x08\x04\xc5\x4b\x9a\xb4\x29\x31\x83\x9b\x85\xb6\x70\x0e\xeb\x4a\xd3\x88\x6b\x17\x50\x6f\x7d\xb0\x7a\x11\x98\x19\xa8\xde\xb9\x37\xb4\x2a\xde\x81\x86\xa6\xa1\x3b\xc8\x88\x9c\xd8\x6b\x8a\x75\xff\x1c\x08\xe3\xfb\x5b\x9d\xa4\xdc\x66\xb2\x43\xdf\xa7\xde\x18\x3b\x13\x89\x59\x09\x4d\xf3\x64\x01\x26\xea\x89\x59\x14\xf6\xe9\xa3\xa6\xd7\xb9\x4f\xa3\x64\x4e\x46\x28\x5e\xa4\xb7\xe0\xe2\x38\x18\x6c\xb6\x20\x32\x9a\x86\xc1\x43\xb9\x0b\xb5\x5e\xc6\x64\xea\x03\xac\x8d\x31\xb9\x89\x95\x2a\x3d\x9c\x33\xf4\x2b\x20\xea\xfd\x2e\xa5\x48\x36\xa1\x86\xdd\x03\x93\x54\x9d\x68\x58\x94\xac\x62\xd2\x50\x6a\xc2\xd4\xb9\x07\x13\x5a\xf6\x6c\xa3\x7b\xb7\x61\xae\x59\xd8\x95\x3d\x52\x5c\x8c\x3a\x3b\x24\x32\x14\x1c\xd3\x66\x63\xef\xa9\xa3\x64\x2b\x13\x07\xa2\x93\xc3\x60\xa3\x2e\xa3\x67\xf6\x2a\x8d\x88\xc9\x93\x12\xef\x80\x30\xd8\x00\xd8\xa6\x0a\x7c\x0b\xc4\xaf\x37\xd7\x6f\x5e\xec\x96\xed\xdc\x7a\x5f\xb6\xbb\x8b\xeb\x7b\xb0\x28\xf4\xa3\x81\xf8\xd4\xd8\x42\x3f\x3a\xf8\xcf\xbd\xfc\xe8\x78\xbf\xcc\xf2\xd5\xd2\x97\xad\x7f\x77\xcd\xf7\x40\x9d\x46\x05\x4b\x57\x62\x77\x29\xa5\x0d\xe9\x75\xe2\xe0\x51\xea\x98\x94\xb3\x59\x20\xa5\x06\x06\x4f\x8a\x0a\x31\x01\xa3\xd2\xe8\xca\x8d\xa5\x40\x27\x6c\x81\xe4\x93\x62\xe2\xa0\x0a\x5e\xbc\x1a\x60\xcc\xd6\xc3\x3d\x95\xb8\x22\xd4\x5e\x42\xe7\x1c\x46\xd8\x06\x70\x36\x01\x87\xff\xad\x79\x68\x7b\x24\xbf\xb3\x40\x6b\x54\x43\xc6\x96\xa5\x36\xab\x3a\x87\xb6\x31\xfa\x14\xa1\xfd\x3e\xad\x30\xb9\x85\x14\x67\x13\x69\x85\xab\x4a\xce\x42\x04\x25\x84\xd2\x0b\xbb\xa5\xce\x12\x3e\x9a\x64\x2f\x04\x53\x5b\x4c\x15\x42\x8c\x3e\xaa\xf4\x0a\x5c\x32\x34\x22\xeb\x88\x69\xc1\xd1\x02\x22\x69\xc8\x98\x9a\x66\xf8\xd5\x54\xe3\xfd\x2e\x67\x33\xec\x20\x82\x75\x78\x99\x9a\xa3\xa8\x26\x04\x1a\x00\x38\x44\xb3\x98\xc3\xc6\x2c\x03\xad\x95\x90\xae\xa0\xd1\x6a\x6a\x1f\x96\x45\xe7\x9c\x23\xcc\x2a\x77\x85\x19\x66\xe8\xb5\x17\x2d\xde\xc4\x61\x84\x94\x0c\x76\xe4\x49\x6a\xdd\xd8\x22\xd9\xa4\xcf\x69\x58\x54\x63\x64\xd6\x6e\x1f\xa6\x9a\x36\x58\x37\xb5\xe8\xb7\x43\xfd\xe9\x03\xe3\x1b\x18\x0e\xb6\x7f\xd2\xc1\x17\xf7\xf6\x60\xf1\x3f\x0f\xb0\x48\xc1\x83\x5c\xde\xdc\xd2\x41\xe5\xd3\xed\x0d\x3c\x7b\xf4\xd6\xce\xfa\x72\x79\x45\x4f\xe7\xd9\xd1\xe5\xc5\xbb\xec\xbf\x2e\x47\x4f\xf0\x52\xe7\x7b\xfd\xd7\xf1\xf1\xe9\xeb\xcb\xbf\x9d\xcd\x27\x4f\xe5\xf7\xf9\xea\x91\xfc\xfb\x53\x93\xee\x14\xbe\xba\x96\xdf\xd7\x78\x7c\xf4\xa6\x8d\xd7\x7f\xbf\xe2\x33\x9c\xc7\x37\xcf\x2f\x4f\xdf\xdf\x2e\xaf\x1e\x5d\x3f\x39\xf9\xed\xe7\xa3\xdf\xf0\xe4\xec\xd9\x89\x2e\x5d\xc7\xc9\x0d\xfc\xfc\xf6\x2b\x8d\x2f\x6f\xdd\xf7\x25\xf0\x97\xd3\xcb\xe5\xe9\x1f\x6f\x73\x79\xf7\xbb\x3d\xa7\x57\x2f\xe0\xa5\xee\x9e\x1d\xff\xff\xed\xa3\xa3\x53\x4f\x87\xf6\xfc\x8f\xe5\xf8\xb8\xe5\xcd\xf6\xe5\xb3\x8f\x7d\x7c\xb0\x5a\xfd\xf5\xe0\xaf\x07\xff\x0d\x00\x00\xff\xff\x0e\x8a\x51\x1c\xc5\x09\x00\x00")

func ConfigCliFleetEthTestJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliFleetEthTestJson,
		"../config/cli/fleet-eth.test.json",
	)
}

func ConfigCliFleetEthTestJson() (*asset, error) {
	bytes, err := ConfigCliFleetEthTestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/fleet-eth.test.json", size: 2501, mode: os.FileMode(420), modTime: time.Unix(1629814234, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigCliFleetWakuv2ProdJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x4d\x8f\xda\x30\x10\x86\xef\xfc\x0a\xcb\xe7\xca\x89\x9d\x10\x1c\x6e\x49\x60\x17\x09\x88\x80\x40\xd2\xdd\xaa\x07\x43\x0c\x35\x5f\x0e\x8e\x1d\xd8\x54\xfb\xdf\xab\x50\xda\x6e\xf7\xeb\xfa\xce\xab\xe7\xd1\x8c\xe6\x67\x0b\x00\x38\xe3\xc7\x9c\xd7\x95\x34\x25\xec\x82\x35\xdb\x97\xfc\x4b\x13\xc7\xb2\x27\xca\x95\xac\xb8\x7a\x82\x5d\xa0\x95\xf9\x1d\x47\x7b\x53\x6a\xae\x22\x79\x5c\x8b\x0d\xec\x82\x06\x01\x00\xec\x1f\xd9\x72\xcf\xf3\x17\x4d\x00\xe0\xdd\x9e\x73\x0d\xbb\x00\x9e\xd9\xce\x54\x04\x15\x4a\xe6\xf0\x36\x0b\xa5\xd4\xb1\xcc\x79\x23\xfd\xf6\xfd\x16\xce\x55\x03\xcf\xc7\x4c\xec\x13\xae\x2a\xae\xfe\x9b\x4e\x4c\xf9\x23\x96\x5a\xac\xc5\x8a\x69\x21\x8f\xe5\x3b\x9d\x44\x33\x2d\x56\x6f\xc0\xff\x76\x7c\x33\xca\xd8\xce\xfc\x0d\xaf\x11\x00\xd0\x12\x85\x6b\x51\x44\xb0\x8d\x08\x21\x88\x38\xd8\xd2\xab\xc2\x72\x6c\xc7\x76\xac\x82\x14\x16\xf6\x16\xc2\x90\x41\x70\x70\x2b\xea\x65\xce\xf2\x30\xc7\xa1\x18\x78\x32\x99\xd4\xab\x32\x51\xc4\x15\xbd\x69\x91\xc4\xed\x29\xf3\x7d\x12\x46\xdb\xed\x79\xa3\x7a\xb7\xdd\xff\xf0\x31\xa5\x08\x7b\x1e\xc2\x4e\x1b\x61\xb7\xfd\x91\x61\xd4\x96\xbb\x4c\x16\x5f\x3b\xf1\xe9\x31\x0b\x17\xc3\xf4\x94\x51\xb1\xb8\x44\xfd\x43\xde\xbe\x1f\x0f\x46\xe9\xe4\x1c\x6d\xea\x87\x7a\x5a\x39\xfc\x95\xc1\x71\x11\x26\x18\x61\xdb\x46\xd8\xa6\x1f\x09\xd2\xdd\xf0\xa8\xcb\x7e\xc4\x1e\xd6\x7c\x3d\xc3\x29\x79\x8a\x66\x1d\x3f\xe2\x9b\x51\x30\x37\xf3\x49\xdf\x0b\xfd\xf9\x65\x73\x09\x85\x10\x01\xbc\xf2\x5f\xde\x2e\xd1\x52\xf1\xf7\x0f\x88\x1d\x17\x11\xdb\x47\x18\x3b\x88\x7a\x57\xbd\x6f\xdb\xf6\x2b\x7b\x2a\xbc\xa9\xbb\xed\x8c\x83\x61\x2a\x96\x27\x93\x51\x16\x90\xce\x22\x56\x81\x3b\xa5\xd9\xae\xf6\xfb\x5c\xdf\xa7\xc2\xd0\xc7\x3b\x7c\xb3\xb7\x00\x78\xbe\x3e\x63\xe3\x4f\xc9\xe7\xbf\xd8\x94\x5b\xcf\xad\x5f\x01\x00\x00\xff\xff\x85\xf7\xd2\x66\xeb\x02\x00\x00")

func ConfigCliFleetWakuv2ProdJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliFleetWakuv2ProdJson,
		"../config/cli/fleet-wakuv2.prod.json",
	)
}

func ConfigCliFleetWakuv2ProdJson() (*asset, error) {
	bytes, err := ConfigCliFleetWakuv2ProdJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/fleet-wakuv2.prod.json", size: 747, mode: os.FileMode(420), modTime: time.Unix(1629814234, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigCliFleetWakuv2TestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x4d\x6f\xe2\x3c\x1c\xc4\xef\x7c\x0a\xcb\xe7\x47\x4e\xec\x18\x92\x70\xa3\x3c\x50\x44\x21\xe2\x2d\x49\x61\xb5\x87\x04\x0c\x98\xbc\x38\x38\x76\x9a\xb2\xea\x77\x5f\x85\x65\xbb\xed\xb6\xdd\xeb\xcc\x68\x7e\x9a\xbf\xfe\x3f\x5a\x00\xc0\x05\xcb\x77\xec\x52\x09\x5d\xc2\x2e\xd8\x47\x69\xc9\xfe\x6b\x64\x4f\xfc\xcf\xcb\xad\xa8\x98\x7c\x86\x5d\xa0\xa4\xfe\x25\xf7\x53\x5d\x2a\x26\xfb\x22\xdf\xf3\x03\xec\x82\xa6\x02\x00\x38\xc8\xa3\x38\x65\xbb\x37\x49\x00\xe0\x30\x65\x4c\xc1\x2e\x80\x4f\x51\xa2\x2b\x82\x14\x2b\x15\xbc\x79\x77\x42\x28\x4f\xec\x58\x03\xfd\xf6\xfd\x26\xae\x64\x53\xbe\x9b\x46\x3c\x5d\x32\x59\x31\xf9\xce\x9d\xe9\xf2\xe8\x09\xc5\xf7\x7c\x1b\x29\x2e\xf2\xf2\x93\xcc\x52\x45\x8a\x6f\x3f\x14\xff\xd9\xf8\xc1\x0a\xa3\x44\xbf\x8a\x57\x09\x00\x68\xf0\x82\x1a\xd4\x46\x84\x12\x44\xb0\x89\x6c\xcb\x50\xdb\xc2\xb0\x4c\xcb\xb4\x8c\x82\x14\x06\xee\xf8\x5c\x93\x51\x2f\xa9\x42\xfe\x3c\x2c\x0f\x8b\xa3\x1e\x0f\x62\x77\xbc\x3f\xad\xeb\x41\x22\x46\x93\x43\xee\xcf\x33\x89\xbd\x76\xf6\x10\xe6\xeb\x53\xbd\x5e\x04\xd9\x6d\xfb\xef\x7e\x6c\x51\x44\x4c\x17\x61\xcb\x6d\x20\x5f\x10\xb2\xd9\x84\xd9\xd3\x4b\xe6\xac\xca\xb5\xaf\xe3\x43\xbf\x17\xe2\x68\x2c\xd8\x70\xb9\xad\xe5\xe4\xe4\x14\xc5\x68\xc8\xab\x99\x70\xed\xd8\xdf\xfc\x4d\x30\x29\xc2\x6d\x8a\x88\xe5\x22\x4c\x9c\xaf\x08\xe3\x98\x30\xe2\x9c\x27\x8f\xf5\xaa\x9d\x6c\xea\xc0\xf7\xc5\x58\xd9\x64\x30\xbd\x78\xf7\x8f\x77\xd4\x5e\xd4\x75\xfb\xf8\x64\x9d\xe9\xfa\xb4\x84\x57\xc0\xdb\xe3\x2d\x95\x90\xec\xf3\x0b\xbe\x2e\xc4\x16\x72\x3a\x57\xbc\x6b\x9a\xe6\x7b\x7a\x10\xf0\xce\x9c\x9e\xec\x69\xef\x21\xe0\xf1\x59\x87\x4e\xd4\x23\xb6\xef\xc9\x1e\x9d\x3b\x61\x72\x71\x07\x4c\xdd\x07\x5c\x3b\x9b\x21\xbe\xd1\x5b\x00\xbc\x5c\xbf\xb1\xe1\x07\xe4\xdf\xcf\xd8\x84\x5b\x2f\xad\x9f\x01\x00\x00\xff\xff\xd2\x21\xbe\x93\xec\x02\x00\x00")

func ConfigCliFleetWakuv2TestJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliFleetWakuv2TestJson,
		"../config/cli/fleet-wakuv2.test.json",
	)
}

func ConfigCliFleetWakuv2TestJson() (*asset, error) {
	bytes, err := ConfigCliFleetWakuv2TestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/fleet-wakuv2.test.json", size: 748, mode: os.FileMode(420), modTime: time.Unix(1629814234, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigCliLesEnabledJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\x50\x50\xf2\xc9\x4c\xcf\x28\x71\x2d\xc9\x70\xce\xcf\x4b\xcb\x4c\x57\xb2\x52\x80\x88\x83\xe5\x5c\xf3\x12\x93\x72\x52\x53\x94\xac\x14\x4a\x8a\x4a\x53\xc1\xe2\xb5\x5c\xb5\x5c\x80\x00\x00\x00\xff\xff\xa6\x74\x24\x05\x3a\x00\x00\x00")

func ConfigCliLesEnabledJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliLesEnabledJson,
		"../config/cli/les-enabled.json",
	)
}

func ConfigCliLesEnabledJson() (*asset, error) {
	bytes, err := ConfigCliLesEnabledJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/les-enabled.json", size: 58, mode: os.FileMode(420), modTime: time.Unix(1610281385, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigCliMailserverEnabledJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\x50\x50\x0a\xcf\xc8\x2c\x2e\x48\x2d\x72\xce\xcf\x4b\xcb\x4c\x57\xb2\x52\x80\x08\x83\xa5\x5c\xf3\x12\x93\x72\x52\x53\x94\xac\x14\x4a\x8a\x4a\x53\x75\xd0\x25\xfc\x42\x02\x82\x2b\xf3\x92\x71\x49\xfb\x26\x66\xe6\x04\xa7\x16\x95\xa5\x16\x61\xaa\x40\xc8\x05\x24\x16\x17\x97\xe7\x17\x81\x2c\x51\x2a\x2e\x49\x2c\x29\x2d\xd6\xcd\x4f\x4b\xcb\xc9\xcc\x4b\xd5\xcd\xcc\x4b\xca\xaf\x50\x02\x6b\xaa\xe5\xaa\xe5\x02\x04\x00\x00\xff\xff\x7c\x73\xee\xbb\xb0\x00\x00\x00")

func ConfigCliMailserverEnabledJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliMailserverEnabledJson,
		"../config/cli/mailserver-enabled.json",
	)
}

func ConfigCliMailserverEnabledJson() (*asset, error) {
	bytes, err := ConfigCliMailserverEnabledJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/mailserver-enabled.json", size: 176, mode: os.FileMode(420), modTime: time.Unix(1610281385, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigStatusChainGenesisJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\x41\x6f\x13\x31\x10\x85\xef\xf9\x15\x96\xcf\x1c\xc6\xf6\x78\x66\xbd\x37\x4a\x59\x81\xc4\x8d\x5f\x30\xb6\xc7\xcd\xaa\x9b\x6c\x94\x6c\xa4\x16\xd4\xff\x8e\x92\x2c\xa1\x42\x9c\xf0\xcd\x7e\x33\xef\x7b\x7e\x3f\x37\xc6\x58\x99\xa6\xb9\xd8\xde\x5c\x2e\xc6\x18\x9b\x07\x47\x58\x24\xa0\x0b\x9e\x04\x42\x8e\xc8\x05\xe2\x43\xc0\x90\xfd\x67\xef\x74\xf8\xa8\x1e\x73\xfa\xb3\x62\x6c\x96\x49\xf6\x45\x6d\x6f\x2c\xbc\x38\x18\xe0\xd3\x00\x84\x8f\x8f\x31\x79\xb8\x1c\x7b\x1d\x7c\xfb\xb0\x22\x3c\x44\x89\x15\x94\x7d\x6b\x14\x81\x53\x2b\x92\x33\x0a\x05\x0d\xa1\xfa\x4e\x84\xaa\x36\x5f\xfe\x03\xb1\x59\x31\xb6\xcc\xfb\x36\x3e\xdd\x1d\x6c\xd9\xca\xb8\xff\x5a\x6d\x6f\x98\xf9\x16\xc4\x6e\xe7\x9d\x9e\x16\x95\xfa\x30\xcd\xe5\xd9\xf6\x06\x56\xa1\xca\x3c\xcc\xc7\xe7\xef\xe7\xc3\x61\x3e\x2e\xb6\x37\xcb\xf1\xac\xab\x96\x5f\x7f\xc8\x7e\x19\xcf\xbb\xbf\x97\x74\x3c\xb8\x08\x5f\xe4\xb4\xbd\x85\x8c\xa0\xa4\x35\xa3\x26\xa8\x89\x1c\x49\xe9\x72\x63\xe7\x92\x6a\xe0\x82\x80\x5d\x41\x27\x15\x52\xf0\x1d\x31\xa9\xcb\x21\xd5\x42\x9d\x80\x96\x96\x43\xb5\xef\x7d\xe3\x3f\x69\xdd\xfd\xf5\xfe\xef\x3a\xb6\x36\x96\xf3\xb4\xbc\xfe\xae\xea\xda\xce\x55\xd3\x97\xe5\x28\x8f\xb2\xc8\x1a\x30\x30\x92\x63\xe4\xc8\x01\x03\x75\xe4\x28\x91\x7a\x88\xc0\x9e\x12\xd3\x45\xa3\xe8\x21\x22\x45\xbe\xcc\x26\x52\x62\x0f\xa8\x14\x19\x99\xa9\xb1\xa7\x7c\xb3\x7e\x92\xd3\xb7\x71\x37\x2e\xef\xa1\x60\x37\x6f\x9b\x5f\x01\x00\x00\xff\xff\x91\xc6\xb3\x58\x64\x02\x00\x00")

func ConfigStatusChainGenesisJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigStatusChainGenesisJson,
		"../config/status-chain-genesis.json",
	)
}

func ConfigStatusChainGenesisJson() (*asset, error) {
	bytes, err := ConfigStatusChainGenesisJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/status-chain-genesis.json", size: 612, mode: os.FileMode(420), modTime: time.Unix(1610281385, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _keysBootnodeKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x4b\x01\x80\x40\x08\x04\xd0\xbb\x69\x58\x96\x6f\x1c\x66\x94\xfe\x11\x7c\xbe\x65\xab\x03\x07\x43\x1b\x87\x5b\x17\x8e\x9e\x23\x02\x11\x1a\x57\x51\x9d\x32\xf7\x24\x99\x1b\x08\xd8\xcb\xcf\x2d\xf4\xba\x3e\x7f\x00\x00\x00\xff\xff\x4a\x3d\x56\xc6\x41\x00\x00\x00")

func keysBootnodeKeyBytes() ([]byte, error) {
	return bindataRead(
		_keysBootnodeKey,
		"keys/bootnode.key",
	)
}

func keysBootnodeKey() (*asset, error) {
	bytes, err := keysBootnodeKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "keys/bootnode.key", size: 65, mode: os.FileMode(420), modTime: time.Unix(1610281385, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _keysFirebaseauthkey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xcb\x52\x85\x20\x18\x00\xe0\x7d\xef\xc2\xcc\x71\x4a\xc4\x76\x3f\x29\x43\x5c\x34\x2d\x4d\x59\x6a\xa5\x8d\x24\xde\x42\x7b\xfb\x3e\x00\x00\x9e\x87\xfa\xfe\xf3\xf9\x11\x5e\x20\x0e\x3a\xf6\x7b\xb8\xf2\x03\xc7\xd9\x4a\x10\xec\x46\x74\xa7\x26\x9a\xfd\x71\xec\xeb\xea\x98\x84\xb2\x9b\x6c\x92\x5b\xaa\x0d\x0e\x7c\x71\x71\xb8\xb1\xb1\xf2\x62\xcc\x61\xfb\x59\x91\xa2\x6f\x69\x6f\x29\x09\xdf\x07\x99\xb5\x09\x2a\x5f\x5b\x69\xa2\xa5\x91\x33\xa9\xa5\x67\x2d\x5d\xdd\xe1\xf0\xac\x82\xb0\xcf\xec\xd7\x72\x3d\x9c\x4f\x54\x4c\x3c\x2d\xad\x8b\xac\x32\x57\x8c\x06\xfc\x5d\x24\xd3\x7e\xf7\x1f\x00\x00\xff\xff\xd6\xa2\x00\x4a\x99\x00\x00\x00")

func keysFirebaseauthkeyBytes() ([]byte, error) {
	return bindataRead(
		_keysFirebaseauthkey,
		"keys/firebaseauthkey",
	)
}

func keysFirebaseauthkey() (*asset, error) {
	bytes, err := keysFirebaseauthkeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "keys/firebaseauthkey", size: 153, mode: os.FileMode(420), modTime: time.Unix(1610281385, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _keysTestAccount1StatusChainPk = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xd0\xdd\x8a\xe4\x40\x08\x05\xe0\x77\xf1\x3a\x01\xb5\x4c\x55\x99\xb7\x51\xcb\x62\x9b\xf9\x6b\x92\x66\xd8\x65\xe8\x77\x5f\x32\xcb\x32\x97\x82\x7e\x1c\xcf\x17\x7c\xe6\x71\xde\x3e\xde\x61\x2f\x0b\xdc\x06\xec\xd0\x29\xb2\x25\xe9\xca\xd4\x71\x15\xe4\xbe\xba\x2a\xae\x68\x52\x94\x7c\x56\x33\x84\x05\x6c\x8c\x23\xcf\x13\x76\xf0\x49\x55\xc2\x8a\x50\xe1\x6a\x58\x7c\x93\x16\xb8\x79\x91\xe2\x9c\x4c\x39\x2d\x59\x5c\x61\x81\x38\xfe\xdc\x1f\x1f\xb0\x7f\x41\xdc\xee\xbf\xf2\x78\xe4\xef\x07\xec\xb0\x35\x17\xb1\x6e\xd4\x67\x6f\x8a\xea\xce\xd1\x4c\x95\x98\x5c\x54\x8b\xa9\xb7\x31\x2c\x89\x46\xe9\x53\x23\x31\x91\x42\x9a\x8c\x51\x6d\x9b\xf5\x92\xbf\xbd\xbb\x1d\xf6\x76\x5e\xfe\xed\x13\x76\x30\xc3\xad\x17\xec\x93\x38\x2a\x73\xca\xa8\x38\x34\xb0\x59\x6a\x2f\x2d\xe1\xf9\xff\xf0\x5a\xce\x73\x25\xee\x6b\x3c\x0e\x58\xe0\x65\x4c\xd8\xe1\xfc\x0e\xfc\x6f\xfc\xb1\xc7\xcb\x6b\x5e\x85\xf1\x02\xa7\xbd\x5e\x0f\xb8\x57\xc1\x62\x9e\x8d\xb3\xb6\x9a\xcc\x64\x82\xc6\x81\x6d\x93\xd9\xe8\x4a\xae\x54\x44\xab\x78\x20\x99\x85\x52\x99\x21\x65\x23\x1a\x19\x05\x16\x78\x87\xbd\x93\xf2\x02\x07\xec\x7d\x81\x3b\xec\xf4\x5c\xe0\xcd\x02\x76\x68\x9d\xb1\x0d\xa4\x40\x2f\x51\x49\xad\x4f\x51\x47\xd6\xda\xbd\x56\xaf\xc5\xc2\x37\x66\xec\x41\x45\xc8\xb4\x8c\xd0\x4a\x6d\xe0\x4c\x95\x9e\x09\xcf\xe7\xdf\x00\x00\x00\xff\xff\xd2\xdb\x1b\x65\xe9\x01\x00\x00")

func keysTestAccount1StatusChainPkBytes() ([]byte, error) {
	return bindataRead(
		_keysTestAccount1StatusChainPk,
		"keys/test-account1-status-chain.pk",
	)
}

func keysTestAccount1StatusChainPk() (*asset, error) {
	bytes, err := keysTestAccount1StatusChainPkBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "keys/test-account1-status-chain.pk", size: 489, mode: os.FileMode(420), modTime: time.Unix(1610281385, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _keysTestAccount1Pk = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8f\x4b\x8e\x24\x3b\x08\x45\xf7\xc2\x38\x42\xb2\x31\xd8\xd8\xf3\x57\xfb\xc0\x80\xf5\x52\xf5\x4b\x45\xa4\x4a\xdd\x2a\xd5\xde\x5b\x91\x83\xee\x19\x20\x74\xee\x3d\xdf\xa0\xee\x47\x9c\x27\x0c\x78\x29\xfc\x5f\x2a\xc8\xae\x2e\x2d\xb0\xd6\x6c\x14\x2f\x9d\xb3\xb3\x34\x6c\x51\x9d\xa5\x38\x1b\x6c\x60\xc7\xef\xfb\xe3\x13\xc6\x37\xd8\xed\xfe\x7f\x1c\x30\x40\xe3\xdc\x33\xca\x6e\x8f\xe3\x7a\x78\x9e\x1f\xf1\xeb\x01\x03\x48\x02\x7d\x89\xb7\xb4\x64\xae\x42\xea\x1a\x9c\x66\x9a\x29\x4a\x96\xa4\xa5\x63\xd0\x9c\xb9\x89\x66\xa5\x82\xe4\x66\x92\x08\x5b\x4c\x6a\x95\xd6\x5f\xde\x5d\x0f\x7d\x3f\xaf\xd8\xdb\xd7\xc5\x2d\xc4\xa6\xb4\xb0\xd8\xcc\x19\xbb\xf6\x9e\x5b\x0e\xe9\x5a\x3b\xb2\x24\xf8\xd9\xe0\xd5\x17\x0c\x38\x9f\x85\xe1\xb9\xfe\x83\xf8\xeb\x5b\x7c\xc0\x28\xb8\xc1\x07\x0c\xac\x98\x89\x36\xb8\xc3\xc8\x1b\x1c\x30\x64\x83\x53\xdf\x2e\x81\xdc\x99\xb1\xc9\x9c\x46\xab\x68\x22\xb1\xa4\xe2\xad\x79\x70\xca\x54\x8b\xa1\x08\xf6\x59\x9e\xb3\x06\xad\x1e\xc8\x68\x58\xda\xc2\xa9\xd6\xae\x22\xef\x6a\x30\xa0\xa3\x97\x60\xd2\xde\x22\xbc\x74\xcf\x8b\x6a\xc3\xb6\x12\x13\x55\x26\x4c\xcb\x78\x95\x6c\x6d\x51\xb4\x14\x42\x55\xa7\x75\x76\x5b\x2e\x53\xf0\x49\xba\x39\x0c\x98\x35\x11\x59\x95\xbd\x74\xa3\x9d\xaa\xfb\x2e\x39\xe3\x8e\x16\x8c\xd9\x19\x6d\x31\x6c\xf0\x15\xc7\x79\xfb\xbc\x24\x7f\xfe\x04\x00\x00\xff\xff\x0d\x85\xaf\xaf\xeb\x01\x00\x00")

func keysTestAccount1PkBytes() ([]byte, error) {
	return bindataRead(
		_keysTestAccount1Pk,
		"keys/test-account1.pk",
	)
}

func keysTestAccount1Pk() (*asset, error) {
	bytes, err := keysTestAccount1PkBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "keys/test-account1.pk", size: 491, mode: os.FileMode(420), modTime: time.Unix(1610281385, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _keysTestAccount2StatusChainPk = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xd0\xdb\x8a\x1c\x41\x08\x80\xe1\x77\xf1\xba\x1b\x2c\xb5\x8e\x6f\x63\xa9\x45\x86\x3d\x0d\xdd\xc3\x92\xb0\xcc\xbb\x87\xde\x10\xf6\xd2\x8b\xff\x43\xfd\x82\xcf\x38\xce\xdb\xc7\x3b\x0c\xde\xe0\xe6\x30\x60\x9a\x69\xa3\x4c\xfb\x4a\x9a\x76\x59\xa1\xbb\xd6\x25\x3b\x17\x12\x49\x94\x8c\xd0\x60\x03\x75\x3f\xe2\x3c\x61\x00\x61\xd6\xec\x18\x95\xd6\x2a\x19\x6b\x5f\xa6\x73\x8a\x16\x0e\x66\xa7\xa6\x5a\x3c\x16\x5d\x91\x1d\x7f\xee\x8f\x0f\x18\x5f\x60\xb7\xfb\xaf\x38\x1e\xf1\xfb\x01\x03\xa4\xf6\x5c\x3d\x2c\xa8\xba\x4a\x11\x66\x77\xf4\x9c\x27\x77\x5f\x69\x61\xd7\xe0\x1e\x5c\x98\xe6\x42\xed\xc6\xce\x4b\x71\x52\x42\xd1\xa6\x34\x2f\xf9\xdb\xbb\xeb\xa1\x6f\xe7\xe5\xdf\x3e\x61\x80\x75\xae\x91\x7b\x23\x69\xa4\x8e\x3d\x73\x2f\x09\xb5\xf6\x98\xdd\x4a\x15\x78\xfe\x0f\x61\x80\xc6\xb9\x27\x6a\xbb\x3d\x0e\xd8\xe0\xc5\x17\x0c\x38\xbf\x17\xfe\x37\xfe\xd8\xfe\xf2\x1a\xd7\xc3\x68\x83\x53\x5f\xaf\x03\xd8\xb4\x18\xb7\x94\x5b\xc9\x92\x75\x22\x1b\x49\x14\x94\x42\x86\xc9\xc9\x5b\x53\xa9\xc2\x5c\xb4\x7a\x12\xd4\xa6\x4b\x94\x32\x16\x66\xce\x15\x61\x83\x77\x18\x2d\x75\xda\xe0\x80\xd1\x36\xb8\xc3\x48\xcf\x0d\xde\xd4\x60\x00\x56\x47\x67\x6a\xd6\xb1\x36\x2b\xd1\x66\x89\x55\x72\xe5\x54\xa8\xab\x72\x4c\x6a\xd1\x91\x49\x1a\x2f\xa1\x99\x45\xcd\x94\x85\x5c\x22\xb1\x34\x78\x3e\xff\x06\x00\x00\xff\xff\x4e\x39\x80\x7d\xe9\x01\x00\x00")

func keysTestAccount2StatusChainPkBytes() ([]byte, error) {
	return bindataRead(
		_keysTestAccount2StatusChainPk,
		"keys/test-account2-status-chain.pk",
	)
}

func keysTestAccount2StatusChainPk() (*asset, error) {
	bytes, err := keysTestAccount2StatusChainPkBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "keys/test-account2-status-chain.pk", size: 489, mode: os.FileMode(420), modTime: time.Unix(1610281385, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _keysTestAccount2Pk = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8f\x4d\x8a\x1c\x3d\x0c\x40\xef\xa2\x75\x15\xd8\xb2\x6c\x4b\xde\x7d\x7c\xe4\x20\xb2\x24\x93\x66\xfe\x9a\xaa\x66\x48\x18\xe6\xee\xa1\x7a\x91\x2c\x25\xc4\xd3\x7b\x5f\xa0\xee\x47\x9c\x27\x0c\xf8\x2f\x69\x16\xc4\x8c\x8d\x5d\x8a\x58\x51\xe9\x38\x57\xa5\x96\xfd\xff\x9c\x56\x17\x4e\x3f\x38\x13\x6c\x60\xc7\xef\xfb\xe3\x03\xc6\x17\xd8\xed\xfe\x33\x0e\x18\xa0\x71\xee\x19\x79\xb7\xc7\x71\x1d\x3c\xd7\x8f\xf8\xf5\x80\x01\xac\x2b\xc9\x5c\x9a\x50\x69\xf5\xa8\x2b\x17\x2d\xcc\x33\x8a\x64\xb7\x95\xc4\x6a\x36\xa6\x65\x2c\xc8\x84\x19\x31\x45\xea\xd6\x72\x4b\x84\x75\xf1\x5f\xde\x5d\x0f\x7d\x3b\xaf\xb7\xb7\x4f\x18\xd0\x75\x56\xd1\xa0\x2e\xb9\xf6\x1e\x1d\x3d\x9a\xd7\xe9\xac\x14\x48\xa1\xf0\xbd\xc1\x8b\x2f\x18\x70\x3e\x85\xe1\x39\xfe\x83\xf8\xcb\x6b\xbc\xc3\x28\xb8\xc1\x3b\x0c\x6c\x98\x89\x36\xb8\xc3\xc8\x1b\x1c\x30\x78\x83\x53\x5f\xaf\x00\xec\xd1\x6c\x72\xe4\x10\x4f\xd6\xdb\x9a\x73\x39\x91\x99\x22\xd5\xd2\x92\x2f\xa1\x24\xd3\x4c\xd4\x68\x51\x10\xdb\xa5\x35\xeb\x72\x9e\x49\xfa\x25\xf2\xa6\x76\x29\x2f\xf7\x59\x44\x3a\x7a\xcf\xb8\x26\x8a\x52\x59\x39\x72\xd4\x92\x4a\xe4\xc2\x1e\x26\x66\xa8\x2b\x66\xc2\xda\x82\xb5\xa7\x8a\xae\x54\xa4\x5b\xbb\x48\x37\x87\x01\x93\x51\xba\x4a\xde\x25\x05\xed\x24\x5e\x77\x6d\x4b\x76\xb6\x92\x2a\xf5\xc9\xd1\x14\x36\xf8\x8c\xe3\xbc\x7d\x5c\x91\xdf\x7f\x02\x00\x00\xff\xff\x80\x42\xa2\x5c\xeb\x01\x00\x00")

func keysTestAccount2PkBytes() ([]byte, error) {
	return bindataRead(
		_keysTestAccount2Pk,
		"keys/test-account2.pk",
	)
}

func keysTestAccount2Pk() (*asset, error) {
	bytes, err := keysTestAccount2PkBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "keys/test-account2.pk", size: 491, mode: os.FileMode(420), modTime: time.Unix(1610281385, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _keysTestAccount3BeforeEip55Pk = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x90\xdb\x8a\x1c\x31\x0c\x44\xff\x45\xcf\xdd\x20\x4b\xbe\xc8\xfe\x1b\x59\x96\xc8\xb0\xb7\xa1\x7b\x58\x12\x96\xf9\xf7\xd0\x59\xc2\x3e\xd6\x43\x1d\x4e\xd5\x17\x7c\xfa\x71\xde\x3e\xde\x61\xf0\x06\xb7\x05\x03\xd0\x96\xb9\x85\xed\x46\x61\x7b\x26\x4d\xbb\xf8\x2a\x7b\x26\x33\xec\xd4\x16\x2f\x81\x0d\x74\xad\xc3\xcf\x13\x06\xb0\x2e\xce\x5e\xbb\xac\x2c\x58\x35\x16\xca\xe4\xd2\x67\x27\x8c\x62\x75\x56\x9a\x55\xdc\x33\x6c\x60\xc7\x9f\xfb\xe3\x03\xc6\x17\xd8\xed\xfe\xcb\x8f\x87\xff\x7e\xc0\x00\xa2\xd2\xbb\x98\x77\x56\x2d\x93\x5a\x6a\xa5\x60\xc9\x9c\xd2\x52\x31\x6b\x53\xa8\x24\x6a\x2b\x23\x5a\xa7\x16\xca\xc2\x0d\x3d\x27\xa6\x4e\x66\x97\xce\x37\xef\xae\x87\xbe\x9d\x17\xff\xf6\x09\x03\xa4\x27\x6a\xd9\x49\x5b\xa3\xb6\x34\xd9\xd2\xb4\xc8\x6c\x12\xfb\x94\x89\xf0\xfc\x5f\x84\x01\xea\xe7\x9e\x48\x76\x7b\x1c\xb0\xc1\xcb\x0a\x18\x70\xfe\x13\xfe\x8e\x3f\xec\xf5\xf2\xea\xd7\x61\xb4\xc1\xa9\xaf\xd7\x80\x45\x93\x50\xb5\xd5\x2c\x11\xd8\xc9\x98\x51\x1a\x51\xc6\xf0\x5c\x83\xc2\xd8\x53\x66\xa6\xc9\x42\x9a\x05\x25\x6a\xc1\xc9\x56\xa5\x4b\x2d\x13\x36\x78\x87\x21\xa9\xd3\x06\x07\x0c\xd9\xe0\x0e\x23\x3d\x37\x78\x53\xbb\xd4\x10\x33\x63\x13\x89\xd5\x66\xa0\x93\xbb\xd7\x48\x5c\x4a\xcb\xa5\x27\x8e\xe2\x14\x25\x65\xaa\x1a\x9d\x58\x8a\x22\xba\x9b\xa6\x28\xd6\x98\x12\x3c\x9f\x7f\x03\x00\x00\xff\xff\x4c\x6d\xd5\xbe\xe9\x01\x00\x00")

func keysTestAccount3BeforeEip55PkBytes() ([]byte, error) {
	return bindataRead(
		_keysTestAccount3BeforeEip55Pk,
		"keys/test-account3-before-eip55.pk",
	)
}

func keysTestAccount3BeforeEip55Pk() (*asset, error) {
	bytes, err := keysTestAccount3BeforeEip55PkBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "keys/test-account3-before-eip55.pk", size: 489, mode: os.FileMode(420), modTime: time.Unix(1610281385, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"../config/README.md": ConfigReadmeMd,
	"../config/cli/fleet-eth.prod.json": ConfigCliFleetEthProdJson,
	"../config/cli/fleet-eth.staging.json": ConfigCliFleetEthStagingJson,
	"../config/cli/fleet-eth.test.json": ConfigCliFleetEthTestJson,
	"../config/cli/fleet-wakuv2.prod.json": ConfigCliFleetWakuv2ProdJson,
	"../config/cli/fleet-wakuv2.test.json": ConfigCliFleetWakuv2TestJson,
	"../config/cli/les-enabled.json": ConfigCliLesEnabledJson,
	"../config/cli/mailserver-enabled.json": ConfigCliMailserverEnabledJson,
	"../config/status-chain-genesis.json": ConfigStatusChainGenesisJson,
	"keys/bootnode.key": keysBootnodeKey,
	"keys/firebaseauthkey": keysFirebaseauthkey,
	"keys/test-account1-status-chain.pk": keysTestAccount1StatusChainPk,
	"keys/test-account1.pk": keysTestAccount1Pk,
	"keys/test-account2-status-chain.pk": keysTestAccount2StatusChainPk,
	"keys/test-account2.pk": keysTestAccount2Pk,
	"keys/test-account3-before-eip55.pk": keysTestAccount3BeforeEip55Pk,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"..": &bintree{nil, map[string]*bintree{
		"config": &bintree{nil, map[string]*bintree{
			"README.md": &bintree{ConfigReadmeMd, map[string]*bintree{}},
			"cli": &bintree{nil, map[string]*bintree{
				"fleet-eth.prod.json": &bintree{ConfigCliFleetEthProdJson, map[string]*bintree{}},
				"fleet-eth.staging.json": &bintree{ConfigCliFleetEthStagingJson, map[string]*bintree{}},
				"fleet-eth.test.json": &bintree{ConfigCliFleetEthTestJson, map[string]*bintree{}},
				"fleet-wakuv2.prod.json": &bintree{ConfigCliFleetWakuv2ProdJson, map[string]*bintree{}},
				"fleet-wakuv2.test.json": &bintree{ConfigCliFleetWakuv2TestJson, map[string]*bintree{}},
				"les-enabled.json": &bintree{ConfigCliLesEnabledJson, map[string]*bintree{}},
				"mailserver-enabled.json": &bintree{ConfigCliMailserverEnabledJson, map[string]*bintree{}},
			}},
			"status-chain-genesis.json": &bintree{ConfigStatusChainGenesisJson, map[string]*bintree{}},
		}},
	}},
	"keys": &bintree{nil, map[string]*bintree{
		"bootnode.key": &bintree{keysBootnodeKey, map[string]*bintree{}},
		"firebaseauthkey": &bintree{keysFirebaseauthkey, map[string]*bintree{}},
		"test-account1-status-chain.pk": &bintree{keysTestAccount1StatusChainPk, map[string]*bintree{}},
		"test-account1.pk": &bintree{keysTestAccount1Pk, map[string]*bintree{}},
		"test-account2-status-chain.pk": &bintree{keysTestAccount2StatusChainPk, map[string]*bintree{}},
		"test-account2.pk": &bintree{keysTestAccount2Pk, map[string]*bintree{}},
		"test-account3-before-eip55.pk": &bintree{keysTestAccount3BeforeEip55Pk, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

